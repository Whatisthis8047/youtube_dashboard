{"ast":null,"code":"var _jsxFileName = \"/Users/keonmo/Documents/PycharmProject/youtube_dashboard/src/carousel_component/frontend/src/CarouselComponent.tsx\";\nimport React from 'react';\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CarouselComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedImageTitle: null,\n      currentIndex: 0\n    };\n    this.render = () => {\n      const {\n        theme\n      } = this.props;\n      const cards = this.props.args[\"cards\"] || [];\n      const style = {\n        fontFamily: theme === null || theme === void 0 ? void 0 : theme.font,\n        color: theme === null || theme === void 0 ? void 0 : theme.textColor\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        className: \"carousel-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"carousel-arrow carousel-arrow-left\",\n          onClick: this.handlePrev,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-content\",\n          children: cards.slice(this.state.currentIndex, this.state.currentIndex + 3).map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-card\",\n            onClick: () => this.handleCardClick(card.link),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: card.image,\n              alt: card.title,\n              className: \"carousel-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"carousel-card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: card.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: card.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"carousel-arrow carousel-arrow-right\",\n          onClick: this.handleNext,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this);\n    };\n    this.handleCardClick = title => {\n      this.setState({\n        selectedImageTitle: title\n      }, () => {\n        Streamlit.setComponentValue(title);\n      });\n    };\n    this.handleNext = () => {\n      const cards = this.props.args[\"cards\"] || [];\n      this.setState(prevState => ({\n        currentIndex: (prevState.currentIndex + 1) % (cards.length - 2)\n      }));\n    };\n    this.handlePrev = () => {\n      const cards = this.props.args[\"cards\"] || [];\n      this.setState(prevState => ({\n        currentIndex: (prevState.currentIndex - 1 + (cards.length - 2)) % (cards.length - 2)\n      }));\n    };\n  }\n}\nexport default _c = withStreamlitConnection(CarouselComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsxDEV","_jsxDEV","CarouselComponent","constructor","args","state","selectedImageTitle","currentIndex","render","theme","props","cards","style","fontFamily","font","color","textColor","className","children","onClick","handlePrev","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","card","index","handleCardClick","link","src","image","alt","title","handleNext","setState","setComponentValue","prevState","length","_c","$RefreshReg$"],"sources":["/Users/keonmo/Documents/PycharmProject/youtube_dashboard/src/carousel_component/frontend/src/CarouselComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\n\ninterface State {\n  selectedImageTitle: string | null;\n  currentIndex: number;\n}\n\ninterface CardProps {\n  group: string;\n  title: string;\n  link: string;\n  image: string;\n}\n\nclass CarouselComponent extends StreamlitComponentBase<State> {\n  public state: State = { selectedImageTitle: null, currentIndex: 0 };\n\n  public render = (): React.ReactNode => {\n    const { theme } = this.props;\n    const cards: CardProps[] = this.props.args[\"cards\"] || [];\n\n    const style: React.CSSProperties = {\n      fontFamily: theme?.font,\n      color: theme?.textColor,\n    };\n\n    return (\n      <div style={style} className=\"carousel-container\">\n        <button className=\"carousel-arrow carousel-arrow-left\" onClick={this.handlePrev}>&lt;</button>\n        <div className=\"carousel-content\">\n          {cards.slice(this.state.currentIndex, this.state.currentIndex + 3).map((card, index) => (\n            <div key={index} className=\"carousel-card\" onClick={() => this.handleCardClick(card.link)}>\n              <img src={card.image} alt={card.title} className=\"carousel-image\" />\n              <div className=\"carousel-card-content\">\n                <h3>{card.title}</h3>\n                <p>{card.title}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n        <button className=\"carousel-arrow carousel-arrow-right\" onClick={this.handleNext}>&gt;</button>\n      </div>\n    );\n  }\n\n  private handleCardClick = (title: string): void => {\n    this.setState({ selectedImageTitle: title }, () => {\n      Streamlit.setComponentValue(title);\n    });\n  }\n\n  private handleNext = (): void => {\n    const cards: CardProps[] = this.props.args[\"cards\"] || [];\n    this.setState(prevState => ({\n      currentIndex: (prevState.currentIndex + 1) % (cards.length - 2)\n    }));\n  }\n\n  private handlePrev = (): void => {\n    const cards: CardProps[] = this.props.args[\"cards\"] || [];\n    this.setState(prevState => ({\n      currentIndex: (prevState.currentIndex - 1 + (cards.length - 2)) % (cards.length - 2)\n    }));\n  }\n}\n\nexport default withStreamlitConnection(CarouselComponent);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}